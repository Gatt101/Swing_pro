
import java.awt.Color;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author GAURAV
 */
public class unit extends javax.swing.JFrame {

    /**
     * Creates new form unit
     */
    public unit() {
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jButton1.setText("Reset");
        jButton1.setBorderPainted(false);
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Go");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jButton3.setBackground(new java.awt.Color(0, 0, 255));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Length");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 0, 0));
        jButton4.setText("Mass");
        jButton4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(102, 255, 51));
        jButton5.setText("Area");
        jButton5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(87, 87, 87))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(69, 69, 69))
        );

        jLabel1.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jLabel1.setText("UNITS CONVERTER");
        jLabel1.setToolTipText("");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrow.png"))); // NOI18N
        jButton9.setContentAreaFilled(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
    String s1= (String)jComboBox1.getSelectedItem();
      String s2= (String)jComboBox2.getSelectedItem();
      
      if(s1.equals("Meter")&& s2.equals("Centimeter"))
      {
          double c=Double.parseDouble(jTextField1.getText());
           double d=c*100;
           jTextField2.setText(String.valueOf(d));
      }
      
    else  if (s1.equals("Meter") && s2.equals("Centimeter")) {
    double meters = Double.parseDouble(jTextField1.getText());
    double centimeters = meters * 100; // 1 Meter = 100 Centimeters
    jTextField2.setText(String.valueOf(centimeters));
} else if (s1.equals("Centimeter") && s2.equals("Meter")) {
    double centimeters = Double.parseDouble(jTextField1.getText());
    double meters = centimeters / 100; // 1 Meter = 100 Centimeters
    jTextField2.setText(String.valueOf(meters));
} else if (s1.equals("Meter") && s2.equals("Millimeter")) {
    double meters = Double.parseDouble(jTextField1.getText());
    double millimeters = meters * 1000; // 1 Meter = 1000 Millimeters
    jTextField2.setText(String.valueOf(millimeters));
} else if (s1.equals("Millimeter") && s2.equals("Meter")) {
    double millimeters = Double.parseDouble(jTextField1.getText());
    double meters = millimeters / 1000; // 1 Meter = 1000 Millimeters
    jTextField2.setText(String.valueOf(meters));
} else if (s1.equals("Centimeter") && s2.equals("Millimeter")) {
    double centimeters = Double.parseDouble(jTextField1.getText());
    double millimeters = centimeters * 10; // 1 Centimeter = 10 Millimeters
    jTextField2.setText(String.valueOf(millimeters));
} else if (s1.equals("Millimeter") && s2.equals("Centimeter")) {
    double millimeters = Double.parseDouble(jTextField1.getText());
    double centimeters = millimeters / 10; // 1 Centimeter = 10 Millimeters
    jTextField2.setText(String.valueOf(centimeters));
} else if (s1.equals("Centimeter") && s2.equals("Kilometer")) {
    double centimeters = Double.parseDouble(jTextField1.getText());
    double kilometers = centimeters / 100000; // 1 Kilometer = 100,000 Centimeters
    jTextField2.setText(String.valueOf(kilometers));
} else if (s1.equals("Kilometer") && s2.equals("Centimeter")) {
    double kilometers = Double.parseDouble(jTextField1.getText());
    double centimeters = kilometers * 100000; // 1 Kilometer = 100,000 Centimeters
    jTextField2.setText(String.valueOf(centimeters));
} else if (s1.equals("Kilometer") && s2.equals("Meter")) {
    double kilometers = Double.parseDouble(jTextField1.getText());
    double meters = kilometers * 1000; // 1 Kilometer = 1000 Meters
    jTextField2.setText(String.valueOf(meters));
} else if (s1.equals("Meter") && s2.equals("Kilometer")) {
    double meters = Double.parseDouble(jTextField1.getText());
    double kilometers = meters / 1000; // 1 Kilometer = 1000 Meters
    jTextField2.setText(String.valueOf(kilometers));
} else if (s1.equals("Millimeter") && s2.equals("Kilometer")) {
    double millimeters = Double.parseDouble(jTextField1.getText());
    double kilometers = millimeters / 1000000; // 1 Kilometer = 1,000,000 Millimeters
    jTextField2.setText(String.valueOf(kilometers));
} else if (s1.equals("Kilometer") && s2.equals("Millimeter")) {
    double kilometers = Double.parseDouble(jTextField1.getText());
    double millimeters = kilometers * 1000000; // 1 Kilometer = 1,000,000 Millimeters
    jTextField2.setText(String.valueOf(millimeters));
}
else  if (s1.equals("Kilometer") && s2.equals("Millimeter")) {
    double kilometers = Double.parseDouble(jTextField1.getText());
    double millimeters = kilometers * 1000000; // 1 Kilometer = 1,000,000 Millimeters
    jTextField2.setText(String.valueOf(millimeters));
} else if (s1.equals("Millimeter") && s2.equals("Kilometer")) {
    double millimeters = Double.parseDouble(jTextField1.getText());
    double kilometers = millimeters / 1000000; // 1 Kilometer = 1,000,000 Millimeters
    jTextField2.setText(String.valueOf(kilometers));  
    
}
 else  if (s1.equals("Grams") && s2.equals("Kilograms")) {
    double grams = Double.parseDouble(jTextField1.getText());
    double kilograms = grams / 1000; // 1 Kilograms = 1000 Gramss
    jTextField2.setText(String.valueOf(kilograms));
} else if (s1.equals("Kilograms") && s2.equals("Grams")) {
    double kilograms = Double.parseDouble(jTextField1.getText());
    double grams = kilograms * 1000; // 1 Kilograms = 1000 Gramss
    jTextField2.setText(String.valueOf(grams));
} else if (s1.equals("Grams") && s2.equals("Milligrams")) {
    double grams = Double.parseDouble(jTextField1.getText());
    double milligrams = grams * 1000; // 1 Grams = 1000 Milligramss
    jTextField2.setText(String.valueOf(milligrams));
} else if (s1.equals("Milligrams") && s2.equals("Grams")) {
    double milligrams = Double.parseDouble(jTextField1.getText());
    double grams = milligrams / 1000; // 1 Grams = 1000 Milligramss
    jTextField2.setText(String.valueOf(grams));
} else if (s1.equals("Kilograms") && s2.equals("Milligrams")) {
    double kilograms = Double.parseDouble(jTextField1.getText());
    double milligrams = kilograms * 1000000; // 1 Kilograms = 1,000,000 Milligramss
    jTextField2.setText(String.valueOf(milligrams));
} else if (s1.equals("Milligrams") && s2.equals("Kilograms")) {
    double milligrams = Double.parseDouble(jTextField1.getText());
    double kilograms = milligrams / 1000000; // 1 Kilograms = 1,000,000 Milligramss
    jTextField2.setText(String.valueOf(kilograms));
}
   
else  if (s1.equals("Acre") && s2.equals("Hectare")) {
    double acres = Double.parseDouble(jTextField1.getText());
    double hectares = acres * 0.404686; // 1 Acre = 0.404686 Hectares
    jTextField2.setText(String.valueOf(hectares));
} else if (s1.equals("Hectare") && s2.equals("Acre")) {
    double hectares = Double.parseDouble(jTextField1.getText());
    double acres = hectares / 0.404686; // 1 Acre = 0.404686 Hectares
    jTextField2.setText(String.valueOf(acres));
} else if (s1.equals("Acre") && s2.equals("Square Inch")) {
    double acres = Double.parseDouble(jTextField1.getText());
    double squareInches = acres * 6272640; // 1 Acre = 6,272,640 Square Inches
    jTextField2.setText(String.valueOf(squareInches));
} else if (s1.equals("Square Inch") && s2.equals("Acre")) {
    double squareInches = Double.parseDouble(jTextField1.getText());
    double acres = squareInches / 6272640; // 1 Acre = 6,272,640 Square Inches
    jTextField2.setText(String.valueOf(acres));
} else if (s1.equals("Hectare") && s2.equals("Square Inch")) {
    double hectares = Double.parseDouble(jTextField1.getText());
    double squareInches = hectares * 15500031; // 1 Hectare = 15,500,031 Square Inches
    jTextField2.setText(String.valueOf(squareInches));
} else if (s1.equals("Square Inch") && s2.equals("Hectare")) {
    double squareInches = Double.parseDouble(jTextField1.getText());
    double hectares = squareInches / 15500031; // 1 Hectare = 15,500,031 Square Inches
    jTextField2.setText(String.valueOf(hectares));
}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         jTextField1.setText("");
        jTextField2.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(evt.getSource()==jButton3){
          
         jPanel2.setBackground(Color.red);
 
          
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        
        jComboBox1.addItem("Meter");
         jComboBox1.addItem("Kilometer");
         jComboBox1.addItem("Millimeter");
         jComboBox1.addItem("Centimeter");
         
             jComboBox2.addItem("Meter");
         jComboBox2.addItem("Kilometer");
         jComboBox2.addItem("Millimeter");
         jComboBox2.addItem("Centimeter");
        
        
        
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
if(evt.getSource()==jButton4){
        
        jPanel2.setBackground(Color.green);   
        
          
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        
        jComboBox1.addItem("Grams");
         jComboBox1.addItem("Kilograms");
         jComboBox1.addItem("Milligrams");
          jComboBox2.addItem("Grams");
         jComboBox2.addItem("Kilograms");
         jComboBox2.addItem("Milligrams");
     
        
        }       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      if(evt.getSource()==jButton5){
        
        jPanel2.setBackground(Color.blue);   
        
          
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        jComboBox1.addItem("Acre");
         jComboBox1.addItem("Hectare");
         jComboBox1.addItem("Square Inch");
          jComboBox2.addItem("Acre");
         jComboBox2.addItem("Hectare");
         jComboBox2.addItem("Square Inch");
        
        
        }   // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
if(evt.getSource()==jButton9)
				{  
                                    main3 my=new main3();
                                    my.setVisible(true);
                                    this.dispose();
				}        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(unit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(unit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(unit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(unit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new unit().setVisible(true);
            }
        }
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}